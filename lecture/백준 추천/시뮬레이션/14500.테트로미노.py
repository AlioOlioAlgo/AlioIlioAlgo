"""
 *packageName    : 
 * fileName       : 14500.테트로미노
 * author         : ipeac
 * date           : 2023-03-10
 * description    :
 * ===========================================================
 * DATE              AUTHOR             NOTE
 * -----------------------------------------------------------
 * 2023-03-10        ipeac       최초 생성
"""
n, m = map(int, input().split())
graph = [
    list(map(int, input().split()))
    for _ in range(n)
]
terri = [
    # 1번 테트로노
    [(0, 0), (0, 1), (0, 2), (0, 3)],
    # 1번째 회전
    [(0, 0), (1, 0), (2, 0), (3, 0)],
    
    #####2본 태툻
    [(0, 0), (0, 1), (1, 0), (1, 1)],
    # 3번 테트로
    [(0, 0), (1, 0), (2, 0), (2, 1)],
    # 3번째 회전 오른쪽
    [(0, 0), (1, 0), (0, 1), (0, 2)],
    # 3번째 오른쪽 180도
    [(0, 0), (0, 1), (1, 1), (2, 1)],
    # 3번째 오른쪽 270도
    [(1, 0), (1, 1), (1, 2), (0, 2)],
    # 3번째 대칭
    [(0, 1), (1, 1), (2, 1), (2, 0)],
    [(0, 0), (1, 0), (1, 1), (1, 2)],
    [(0, 0), (0, 1), (1, 0), (2, 0)],
    [(0, 0), (0, 1), (0, 2), (1, 2)],
    ### 4번
    
    [(0, 0), (1, 0), (1, 1), (2, 1)],
    [(0, 0), (0, 1), (0, 2), (1, 1)],
    
    # 4번째 오른쪽 회전
    [(1, 0), (0, 1), (1, 1), (0, 2)],
    [(0, 1), (1, 0), (1, 1), (2, 0)],
    [(0, 0), (0, 1), (1, 1), (1, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 1)],
    [(0, 0), (1, 0), (2, 0), (1, 1)],
    [(1, 0), (0, 1), (1, 1), (1, 2)],
    [(1, 0), (0, 1), (1, 1), (2, 1)]

]

def in_range(x, y):
    return 0 <= x < n and 0 <= y < m

def calc(arr, x, y):
    value = 0
    for ar in arr:
        value += graph[x + ar[0]][y + ar[1]]
    return value

max_value = 0
for i in range(n):
    for j in range(m):
        for te in terri:
            for t in te:
                if in_range(i + t[0], j + t[1]):
                    pass
                else:
                    break
            else:
                # 전부 통과한다면
                value = calc(te, i, j)
                if max_value < value:
                    max_value = value
print(max_value)
